[
  {
    "id": 1,
    "displayName": "Fullstack MERN App",
    "url": "https://fullstack-mern-car-rental.herokuapp.com/",
    "username": "React | Hooks | Express | OAuth | MongoDB",
    "title": "CarHire.com",
    "src": "/assets/img/react.jpg",
    "logo": "/assets/img/react.jpg",
    "color": "linear-gradient(135deg,rgb(0, 97, 255) 10%, rgb(96, 239, 255)) 0%",
    "backdrop-filter": "blur(10px)",
    "avatar": "/assets/logo/react.svg",
    "text": "React JS to implement the presentation layer, Express and Node to make up the middle layer (Server), and MongoDB to create the database layer to develop a car rental application. ",
    "text2": "The frontend layer is created by functional component React JS framework with Material UI library. The app allows users to login with Google sign-in (SSO) and have specific permissions and roles through Auth0 authentication and authorization. Users could also pick their preferred city and date for car booking. List of cars are presented based on the above selections.",
    "text3": "Backend layer was created by Node.js and Express.js create the API for CRUD operations allowing admin to create, delete, update, read the cars inventories. The RESTful API endpoints allow users to checkout and make/edit orders. Mongoose create the model and interact with MongoDB datebase.",
    "loginDetails": "Login details:",
    "customerLogin": "Customer login: your google account or create your own through the website.",
    "jaLogin": "Junior admin login: junioradmin@abc.com password: Password123 (with permission to read, add, update cars)",
    "saLogin": "senioradmin@abc.com password: Password123 (with extra permission to delete cars)",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/fullstack-carapp",
    "remark": "Remark:",
    "remarkDetails": "It might require 10-20sec to access the link below. Reason: Subscripted to cheapest Eco Dynos Plan of Heroku (USD5/month). That sleeping dyno receives no web traffic in a 30-minute period, it sleeps and the dyno becomes active again after a short delay."
  },
  {
    "id": 2,
    "displayName": "React Line Chart App",
    "url": "https://dulcet-palmier-17575f.netlify.app/",
    "username": "Chart.js | React | Ajax ",
    "title": "Chart.js Line Chart App",
    "src": "/assets/img/linechart.png",
    "color": "linear-gradient(135deg,rgb(255, 27, 107) 10%, rgb(69, 202, 255)) 0%",
    "avatar": "/assets/logo/10342521.png",
    "text": "This is a simple web application for generating a temperature chart. It is built using Chart.js and React.js. Chart component and ChartControls object will display the chart and its controls. The Chart component uses the Chart.js library to create a line chart and takes in an array of temperature data as a prop, and uses this data to generate the chart. ChartControls object provide the user with controls to adjust the temperature data. Data are fetching from 3rd Party weather API to simulate temperature data used in the ChartControls.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/temp-chart"
  },
  {
    "id": 3,
    "displayName": "Vue2",
    "url": "https://shiny-starlight-b583f3.netlify.app/#/",
    "username": "Vue2 | VueX | TailwindCSS ",
    "title": "Vue2 Todo List App",
    "src": "/assets/img/vue todo.png",
    "color": "linear-gradient(135deg,rgb(0, 255, 135) 10%, rgb(96, 239, 255)) 0%",
    "avatar": "/assets/logo/vuelogo.png",
    "text": "This is a Vue2 based Todo app with VueX as a central date management system and Tailwind as CSS framework. CRUD operations for add, delete, update and read to-do items. Features like due date alert and completed tasks view are added into this app.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/vue2-vuex-todo"
  },
  {
    "id": 4,
    "displayName": "Next.js",
    "url": "https://master--resonant-pika-badb62.netlify.app/",
    "username": "Next.js | React Hooks | TailwindCSS",
    "title": "Next.js Todo List App",
    "src": "/assets/img/next todo.png",
    "color": "linear-gradient(135deg,rgb(64, 201, 255) 10%, rgb(232, 28, 255)) 0%",
    "avatar": "/assets/logo/nextjs.png",
    "text": "This is a Next.js based Todo app with React Hooks and Tailwind as CSS framework. CRUD operations for add, update and read to-do items. Just double click the item to mark it as done and it will move to the done list.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/temp-chart"
  },
  {
    "id": 5,
    "displayName": "Nuxt.js",
    "url": "https://adorable-rolypoly-9d6405.netlify.app/",
    "username": "Nuxt.js | TailwindCSS",
    "title": "Online Store App",
    "src": "/assets/img/nuxt store.png",
    "color": "linear-gradient(135deg,rgb(255, 147, 15) 10%, rgb(255, 249, 91)) 0%",
    "avatar": "/assets/logo/NuxtJS_Logo.png",
    "text": "This is a Nuxt.js based Online Store with Tailwind as CSS framework. A simple demo for 3rd party API fetch to display products and currencies.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/nuxt3-store-learning"
  },
  {
    "id": 6,
    "displayName": "3D Animation App",
    "url": "https://verdant-platypus-3a9234.netlify.app",
    "username": "Babylon JS",
    "title": "3D Earth",
    "src": "/assets/img/3d.jpg",
    "color": "linear-gradient(135deg,rgb(255, 15, 123) 10%, rgb(248, 155, 41)) 0%",
    "avatar": "/assets/logo/babylonjs.png",
    "text": "Use the Babylon.js GUI library to generate different types of galaxies, change the colours, make them swirly... Endless options and all of them pretty",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/Babylon-Earth-App"
  },

  {
    "id": 7,
    "displayName": "First Server App",
    "url": "https://github.com/pctinkychausky/first-server-mongodb-restful-demo",
    "username": "Express | MongoDB | Mongoose | REST",
    "title": "First Server with a REST API tied to DB",
    "src": "/assets/img/first-server-mongodb-demo.png",
    "color": "linear-gradient(135deg,rgb(169, 255, 104) 10%, rgb(255, 137, 137)) 0%",
    "avatar": "/assets/logo/node.svg",
    "text": "It would run locally with MongoDB Compass. CRUD operation can be done through Postman. The purpose of this app is to demonstrate how to create the server side layer with express, connecting to local/remote db server, forming the db record properly by creating models and schemas with Mongoose and create a REST API with db connection! This app did not actually deploy and host but on github for demo.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/first-server-mongodb-restful-demo"
  },
  {
    "id": 8,
    "displayName": "AJAX / API / Basic React App",
    "url": "https://symphonious-piroshki-e52943.netlify.app",
    "username": "Asynchronous Programming | Transport layers",
    "title": "Your Groceries Advisor",
    "src": "/assets/img/weather.png",
    "color": "linear-gradient(135deg,rgb(132, 255, 201) 10%, rgb(236, 160, 255)) 0%",
    "avatar": "/assets/logo/node.svg",
    "text": "Ajax app is created by React. Calling weather API to access user's geo-location to provide weather forecast and advise the users to prepare extra groceries if bad weather is coming.Use React to replace the browsers default actions and create a Single Page Application that's more performant and delivers a better user experience. About SPA's, components, props, state, routers, context and hooks, and; styling with Styled Components. Connect your application to external resources so you can send and receive data to access services and applications.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/weather-forecast-grocery-advise-app"
  },
  {
    "id": 9,
    "displayName": "DOM App",
    "url": "https://superlative-dusk-d07c37.netlify.app",
    "username": "DOM Manipulation | common JS",
    "title": "Guess Your Animals Game",
    "src": "/assets/img/dom-game.jpg",
    "color": "linear-gradient(135deg, rgb(178, 239, 145) 10%, rgb(250, 147, 114)) 0%",
    "avatar": "/assets/logo/typescript.svg",
    "text": "This is a children game named Guess your Animals. It is a work of DOM manipulation and common JS. User have to spell the name of the animals correctly to win the game. It will also remind the players how many guesses are remaining before lose. Create an interactive interface which responds dynamically to users and events by using JavaScript to manipulate the DOM (Document Object Model)",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/dom-game"
  },
  {
    "id": 10,
    "displayName": "Dashboard App",
    "url": "https://magical-lolly-f07100.netlify.app",
    "username": "Web API's | Material UI",
    "title": "News Today",
    "src": "/assets/img/dashboard.jpg",
    "color": "linear-gradient(135deg, rgb(29, 189, 230) 10%, rgb(241, 81, 94)) 0%",
    "avatar": "/assets/logo/javascript.svg",
    "text": "A Dashbord app showing the recent news and weather information demonstrated the use of Material UI and Ajax API call.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/dashboard-app"
  },

  {
    "id": 11,
    "displayName": "CSS Homepage",
    "url": "https://coruscating-cocada-9d8b97.netlify.app",
    "username": "HTML5 | CSS3 | Flex | Media Queries",
    "title": "Homeage Piece",
    "src": "/assets/img/nowness.png",
    "color": "linear-gradient(135deg,rgb(66, 4, 126) 10%, rgb(7, 244, 158)) 0%",
    "avatar": "/assets/logo/javascript.svg",
    "text": "NOWNESS website clone. Showcase of website cloning with skills of CSS3 (Flexbox), HTML5 and responsive layout without Figma design.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/css-homepage-project"
  },
  {
    "id": 12,
    "displayName": "Figma clone",
    "url": "https://fastidious-manatee-fa8b18.netlify.app/",
    "username": "HTML5 | CSS3 ",
    "title": "Figma clone",
    "src": "/assets/img/four-card.jpg",
    "color": "linear-gradient(135deg,rgb(244, 233, 0) 10%, rgb(96, 182, 241)) 0%",
    "avatar": "/assets/logo/redux.svg",
    "text": "Four cards website clone was created by taking flat design files (e.g. Figma or Sketch files) and create professional standard, pixel-perfect replications that are responsive to device screen size / orientation nd consistent across browsers.",
    "github": "Github Link:",
    "githubLink": "https://github.com/pctinkychausky/four-card-feature-grid"
  }
]
